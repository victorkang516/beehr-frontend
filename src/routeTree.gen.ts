/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as OnboardingRouteImport } from './routes/onboarding'
import { Route as LoginRouteImport } from './routes/login'
import { Route as AuthRouteImport } from './routes/auth'
import { Route as AccountSetupRouteImport } from './routes/account-setup'
import { Route as AccountRouteImport } from './routes/account'
import { Route as IndexRouteImport } from './routes/index'
import { Route as UserTimeclockRouteImport } from './routes/user/timeclock'
import { Route as UserProfileRouteImport } from './routes/user/profile'
import { Route as UserLeaveRouteImport } from './routes/user/leave'
import { Route as UserDirectoryRouteImport } from './routes/user/directory'
import { Route as AuthCallbackRouteImport } from './routes/auth/callback'
import { Route as AdminLeaveRouteImport } from './routes/admin/leave'
import { Route as AdminEmployeesRouteImport } from './routes/admin/employees'
import { Route as AdminAttendanceRouteImport } from './routes/admin/attendance'
import { Route as AccountSetupSuccessRouteImport } from './routes/account-setup/success'

const OnboardingRoute = OnboardingRouteImport.update({
  id: '/onboarding',
  path: '/onboarding',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthRoute = AuthRouteImport.update({
  id: '/auth',
  path: '/auth',
  getParentRoute: () => rootRouteImport,
} as any)
const AccountSetupRoute = AccountSetupRouteImport.update({
  id: '/account-setup',
  path: '/account-setup',
  getParentRoute: () => rootRouteImport,
} as any)
const AccountRoute = AccountRouteImport.update({
  id: '/account',
  path: '/account',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const UserTimeclockRoute = UserTimeclockRouteImport.update({
  id: '/user/timeclock',
  path: '/user/timeclock',
  getParentRoute: () => rootRouteImport,
} as any)
const UserProfileRoute = UserProfileRouteImport.update({
  id: '/user/profile',
  path: '/user/profile',
  getParentRoute: () => rootRouteImport,
} as any)
const UserLeaveRoute = UserLeaveRouteImport.update({
  id: '/user/leave',
  path: '/user/leave',
  getParentRoute: () => rootRouteImport,
} as any)
const UserDirectoryRoute = UserDirectoryRouteImport.update({
  id: '/user/directory',
  path: '/user/directory',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthCallbackRoute = AuthCallbackRouteImport.update({
  id: '/callback',
  path: '/callback',
  getParentRoute: () => AuthRoute,
} as any)
const AdminLeaveRoute = AdminLeaveRouteImport.update({
  id: '/admin/leave',
  path: '/admin/leave',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminEmployeesRoute = AdminEmployeesRouteImport.update({
  id: '/admin/employees',
  path: '/admin/employees',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminAttendanceRoute = AdminAttendanceRouteImport.update({
  id: '/admin/attendance',
  path: '/admin/attendance',
  getParentRoute: () => rootRouteImport,
} as any)
const AccountSetupSuccessRoute = AccountSetupSuccessRouteImport.update({
  id: '/success',
  path: '/success',
  getParentRoute: () => AccountSetupRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/account': typeof AccountRoute
  '/account-setup': typeof AccountSetupRouteWithChildren
  '/auth': typeof AuthRouteWithChildren
  '/login': typeof LoginRoute
  '/onboarding': typeof OnboardingRoute
  '/account-setup/success': typeof AccountSetupSuccessRoute
  '/admin/attendance': typeof AdminAttendanceRoute
  '/admin/employees': typeof AdminEmployeesRoute
  '/admin/leave': typeof AdminLeaveRoute
  '/auth/callback': typeof AuthCallbackRoute
  '/user/directory': typeof UserDirectoryRoute
  '/user/leave': typeof UserLeaveRoute
  '/user/profile': typeof UserProfileRoute
  '/user/timeclock': typeof UserTimeclockRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/account': typeof AccountRoute
  '/account-setup': typeof AccountSetupRouteWithChildren
  '/auth': typeof AuthRouteWithChildren
  '/login': typeof LoginRoute
  '/onboarding': typeof OnboardingRoute
  '/account-setup/success': typeof AccountSetupSuccessRoute
  '/admin/attendance': typeof AdminAttendanceRoute
  '/admin/employees': typeof AdminEmployeesRoute
  '/admin/leave': typeof AdminLeaveRoute
  '/auth/callback': typeof AuthCallbackRoute
  '/user/directory': typeof UserDirectoryRoute
  '/user/leave': typeof UserLeaveRoute
  '/user/profile': typeof UserProfileRoute
  '/user/timeclock': typeof UserTimeclockRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/account': typeof AccountRoute
  '/account-setup': typeof AccountSetupRouteWithChildren
  '/auth': typeof AuthRouteWithChildren
  '/login': typeof LoginRoute
  '/onboarding': typeof OnboardingRoute
  '/account-setup/success': typeof AccountSetupSuccessRoute
  '/admin/attendance': typeof AdminAttendanceRoute
  '/admin/employees': typeof AdminEmployeesRoute
  '/admin/leave': typeof AdminLeaveRoute
  '/auth/callback': typeof AuthCallbackRoute
  '/user/directory': typeof UserDirectoryRoute
  '/user/leave': typeof UserLeaveRoute
  '/user/profile': typeof UserProfileRoute
  '/user/timeclock': typeof UserTimeclockRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/account'
    | '/account-setup'
    | '/auth'
    | '/login'
    | '/onboarding'
    | '/account-setup/success'
    | '/admin/attendance'
    | '/admin/employees'
    | '/admin/leave'
    | '/auth/callback'
    | '/user/directory'
    | '/user/leave'
    | '/user/profile'
    | '/user/timeclock'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/account'
    | '/account-setup'
    | '/auth'
    | '/login'
    | '/onboarding'
    | '/account-setup/success'
    | '/admin/attendance'
    | '/admin/employees'
    | '/admin/leave'
    | '/auth/callback'
    | '/user/directory'
    | '/user/leave'
    | '/user/profile'
    | '/user/timeclock'
  id:
    | '__root__'
    | '/'
    | '/account'
    | '/account-setup'
    | '/auth'
    | '/login'
    | '/onboarding'
    | '/account-setup/success'
    | '/admin/attendance'
    | '/admin/employees'
    | '/admin/leave'
    | '/auth/callback'
    | '/user/directory'
    | '/user/leave'
    | '/user/profile'
    | '/user/timeclock'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AccountRoute: typeof AccountRoute
  AccountSetupRoute: typeof AccountSetupRouteWithChildren
  AuthRoute: typeof AuthRouteWithChildren
  LoginRoute: typeof LoginRoute
  OnboardingRoute: typeof OnboardingRoute
  AdminAttendanceRoute: typeof AdminAttendanceRoute
  AdminEmployeesRoute: typeof AdminEmployeesRoute
  AdminLeaveRoute: typeof AdminLeaveRoute
  UserDirectoryRoute: typeof UserDirectoryRoute
  UserLeaveRoute: typeof UserLeaveRoute
  UserProfileRoute: typeof UserProfileRoute
  UserTimeclockRoute: typeof UserTimeclockRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/onboarding': {
      id: '/onboarding'
      path: '/onboarding'
      fullPath: '/onboarding'
      preLoaderRoute: typeof OnboardingRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth': {
      id: '/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/account-setup': {
      id: '/account-setup'
      path: '/account-setup'
      fullPath: '/account-setup'
      preLoaderRoute: typeof AccountSetupRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/account': {
      id: '/account'
      path: '/account'
      fullPath: '/account'
      preLoaderRoute: typeof AccountRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/user/timeclock': {
      id: '/user/timeclock'
      path: '/user/timeclock'
      fullPath: '/user/timeclock'
      preLoaderRoute: typeof UserTimeclockRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/user/profile': {
      id: '/user/profile'
      path: '/user/profile'
      fullPath: '/user/profile'
      preLoaderRoute: typeof UserProfileRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/user/leave': {
      id: '/user/leave'
      path: '/user/leave'
      fullPath: '/user/leave'
      preLoaderRoute: typeof UserLeaveRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/user/directory': {
      id: '/user/directory'
      path: '/user/directory'
      fullPath: '/user/directory'
      preLoaderRoute: typeof UserDirectoryRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/callback': {
      id: '/auth/callback'
      path: '/callback'
      fullPath: '/auth/callback'
      preLoaderRoute: typeof AuthCallbackRouteImport
      parentRoute: typeof AuthRoute
    }
    '/admin/leave': {
      id: '/admin/leave'
      path: '/admin/leave'
      fullPath: '/admin/leave'
      preLoaderRoute: typeof AdminLeaveRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/employees': {
      id: '/admin/employees'
      path: '/admin/employees'
      fullPath: '/admin/employees'
      preLoaderRoute: typeof AdminEmployeesRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/attendance': {
      id: '/admin/attendance'
      path: '/admin/attendance'
      fullPath: '/admin/attendance'
      preLoaderRoute: typeof AdminAttendanceRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/account-setup/success': {
      id: '/account-setup/success'
      path: '/success'
      fullPath: '/account-setup/success'
      preLoaderRoute: typeof AccountSetupSuccessRouteImport
      parentRoute: typeof AccountSetupRoute
    }
  }
}

interface AccountSetupRouteChildren {
  AccountSetupSuccessRoute: typeof AccountSetupSuccessRoute
}

const AccountSetupRouteChildren: AccountSetupRouteChildren = {
  AccountSetupSuccessRoute: AccountSetupSuccessRoute,
}

const AccountSetupRouteWithChildren = AccountSetupRoute._addFileChildren(
  AccountSetupRouteChildren,
)

interface AuthRouteChildren {
  AuthCallbackRoute: typeof AuthCallbackRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthCallbackRoute: AuthCallbackRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AccountRoute: AccountRoute,
  AccountSetupRoute: AccountSetupRouteWithChildren,
  AuthRoute: AuthRouteWithChildren,
  LoginRoute: LoginRoute,
  OnboardingRoute: OnboardingRoute,
  AdminAttendanceRoute: AdminAttendanceRoute,
  AdminEmployeesRoute: AdminEmployeesRoute,
  AdminLeaveRoute: AdminLeaveRoute,
  UserDirectoryRoute: UserDirectoryRoute,
  UserLeaveRoute: UserLeaveRoute,
  UserProfileRoute: UserProfileRoute,
  UserTimeclockRoute: UserTimeclockRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
